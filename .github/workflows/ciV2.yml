# .github/workflows/ci.yml
name: ✅ CI Build & Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: 🏗️ Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres123
          POSTGRES_USER: postgres
          POSTGRES_DB: AsisyaTestDb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔧 Setup .NET 9.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: 📦 Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: 🔄 Restore dependencies
      run: dotnet restore Asisya.ProductsApi/Asisya.ProductsApi.sln

    - name: 🏗️ Build solution
      run: dotnet build Asisya.ProductsApi/Asisya.ProductsApi.sln --configuration Release --no-restore

    - name: ⏳ Wait for Postgres
      run: |
        until pg_isready -h localhost -p 5432 -U postgres; do
          echo "Esperando a que Postgres esté listo..."
          sleep 5
        done

    - name: 🧪 Run unit tests
      run: |
        mkdir -p ./test-results
        dotnet test Asisya.ProductsApi/tests/Application.Tests/Application.Tests.csproj \
          --configuration Release \
          --logger "trx;LogFileName=unit-tests.trx" \
          --results-directory ./test-results

    - name: 🧪 Run integration tests
      run: |
        mkdir -p ./test-results
        dotnet test Asisya.ProductsApi/tests/Api.IntegrationTests/Api.IntegrationTests.csproj \
          --configuration Release \
          --logger "trx;LogFileName=integration-tests.trx" \
          --results-directory ./test-results
      env:
        ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=AsisyaTestDb;Username=postgres;Password=postgres123"

    - name: 📊 Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: 'Test Results'
        path: './test-results/*.trx'
        reporter: 'dotnet-trx'

    - name: 🐳 Build Docker image
      run: |
        docker build -t asisya-products-api:latest -t asisya-products-api:${{ github.sha }} Asisya.ProductsApi/

    - name: ✅ Success notification
      if: success()
      run: |
        echo "🎉 Build successful!"
        echo "✅ All tests passed. The build is ready for deployment."

    - name: ❌ Failure notification
      if: failure()
      run: |
        echo "❌ Build failed!"
        echo "🔍 Check the logs above for details"
